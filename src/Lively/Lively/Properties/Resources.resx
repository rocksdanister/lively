<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AudioFocused.Content" xml:space="preserve">
    <value>Play audio only when desktop is focused</value>
  </data>
  <data name="Audio.Description" xml:space="preserve">
    <value>Volume level of all wallpapers</value>
  </data>
  <data name="Audio.Header" xml:space="preserve">
    <value>Volume</value>
  </data>
  <data name="AudioGroup.Header" xml:space="preserve">
    <value>Audio</value>
  </data>
  <data name="Community.Description" xml:space="preserve">
    <value>Online discussion forum</value>
  </data>
  <data name="Documentation.Description" xml:space="preserve">
    <value>API documentation and help</value>
  </data>
  <data name="DescExplorerCrash" xml:space="preserve">
    <value>Lively has encountered a fatal error.

Windows Explorer restarted twice in the last 30 seconds! This may be a conflict between Lively and other desktop customization software or Windows. To avoid further issues, all wallpapers are terminated.</value>
  </data>
  <data name="DescIncompatibleTaskbarTheme" xml:space="preserve">
    <value>Incompatible program found, taskbar theming disabled</value>
  </data>
  <data name="Website.Description" xml:space="preserve">
    <value>Official webpage of Lively Wallpaper</value>
  </data>
  <data name="DescOledScreensaverNotice" xml:space="preserve">
    <value>Most modern LCD and LED displays do not suffer from burn-in issue and therefore any wallpaper can be used as screensaver.

For OLED, Plasma or CRT displays which are susceptibe to burn-in it is advised to use wallpaper with regular motion and an overall dark theme which is supposed to mitigate burn-in but this feature is untested and its effectiveness cannot be guaranteed.

The main purpose of Lively's screensavers is to add another layer of customization to your pc, use screensavers as burn-in protection at your own risk!</value>
  </data>
  <data name="ReportBug.Description" xml:space="preserve">
    <value>Report a problem with the software</value>
  </data>
  <data name="AddWallpaperFileBrowse.Header" xml:space="preserve">
    <value>Choose a file</value>
  </data>
  <data name="DescriptionAppRules" xml:space="preserve">
    <value>Wallpaper playback behaviour based on running application</value>
  </data>
  <data name="DescriptionCancelQuestion" xml:space="preserve">
    <value>Are you sure you want to cancel?</value>
  </data>
  <data name="DescriptionDeleteConfirmation" xml:space="preserve">
    <value>Are you sure you want to permanently delete this wallpaper from the disk?</value>
  </data>
  <data name="DescriptionDeleteConfirmationLibrary" xml:space="preserve">
    <value>Are you sure you want to delete this wallpaper from the Library?</value>
  </data>
  <data name="DragDropFile.Text" xml:space="preserve">
    <value>Simply drag and drop files into here</value>
  </data>
  <data name="DescriptionExternalAppWarning" xml:space="preserve">
    <value>You are opening an external application as wallpaper.
Malicious applications can host malware, virus.. and do harm to your system.
Only continue if this application comes from a trusted source.</value>
  </data>
  <data name="MinimizedTray.Text" xml:space="preserve">
    <value>Lively is minimized to systemtray, right click lively icon to continue.</value>
  </data>
  <data name="DescriptionPleaseRestartLively" xml:space="preserve">
    <value>Please restart Lively for settings to take effect</value>
  </data>
  <data name="DescriptionPleaseStop" xml:space="preserve">
    <value>Please stop before proceeding</value>
  </data>
  <data name="DescriptionRecordStart" xml:space="preserve">
    <value>Press to begin recording</value>
  </data>
  <data name="DescriptionRestoringWallpaper" xml:space="preserve">
    <value>Currently restoring previous wallpaper(s), please wait...</value>
  </data>
  <data name="DescriptionScreenLayout" xml:space="preserve">
    <value>Choose Display</value>
  </data>
  <data name="DescriptionUpdateAvailable" xml:space="preserve">
    <value>A new version of software is available!</value>
  </data>
  <data name="DescriptionWebpageLoad" xml:space="preserve">
    <value>Enter website link to load, shadertoy.com shader links are supported</value>
  </data>
  <data name="DescriptionWelcomeWizard" xml:space="preserve">
    <value>This wizard will get you started on setting up Lively</value>
  </data>
  <data name="DescriptionWindowsNCodecInstall" xml:space="preserve">
    <value>Your Windows N/KN version will require the download of additional codecs to support video playback in wallpapers</value>
  </data>
  <data name="DescSupperDev" xml:space="preserve">
    <value>Show support by buying the developer coffee</value>
  </data>
  <data name="DescSwitchBranchBetaWarning" xml:space="preserve">
    <value>You are about to change to beta (developer) build of Lively.
Updates will be frequent and may contain bugs!</value>
  </data>
  <data name="HideSysTray.Description" xml:space="preserve">
    <value>System-tray icon visibility, lively will continue to run with the icon hidden</value>
  </data>
  <data name="HideSysTray.Header" xml:space="preserve">
    <value>System-tray Icon</value>
  </data>
  <data name="Language.Description" xml:space="preserve">
    <value>Lively will restart to apply the new language</value>
  </data>
  <data name="Language.Header" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LivelyExceptionAppUpdateFail" xml:space="preserve">
    <value>Failed to update; try downloading the installer from:
https://github.com/rocksdanister/lively/releases</value>
  </data>
  <data name="LivelyExceptionDamagedZipFile" xml:space="preserve">
    <value>Damaged wallpaper file, try redownloading</value>
  </data>
  <data name="LivelyExceptionGeneral" xml:space="preserve">
    <value>Oops... Looks like something went wrong :(
In order to better understand this error and fix the issue, share the log file with the developer.
Instructions for sharing log file:
https://github.com/rocksdanister/lively/wiki</value>
  </data>
  <data name="LivelyExceptionHighContrastMode" xml:space="preserve">
    <value>Lively cannot work properly with Windows High Contrast mode enabled!
Disable High Contrast mode and try again</value>
  </data>
  <data name="LivelyExceptionMediaPlayback" xml:space="preserve">
    <value>Media playback failed :(
Try changing the videoplayer in lively settings.

In order to better understand this error and fix the issue, share the log file with the developer.
Instructions for sharing log file:
https://github.com/rocksdanister/lively/wiki</value>
  </data>
  <data name="LivelyExceptionNotLivelyZip" xml:space="preserve">
    <value>Not Lively wallpaper file</value>
  </data>
  <data name="LivelyExceptionSafeModeStart" xml:space="preserve">
    <value>Lively was not closed properly, starting in safe mode.
Do you wish to restore previously running wallpapers?</value>
  </data>
  <data name="LivelyExceptionWorkerWSetupFail" xml:space="preserve">
    <value>It looks like some settings need to be set to make Lively work:  
1. Press the Win + R keys to open Run, 
2. Type SystemPropertiesPerformance.exe into Run, click on "OK" to open Performance Options.
3. Enable/Check "Animate controls and elements inside windows" (If already checked, then uncheck and check) &amp; Apply.
4. Click "Apply" then press "OK" to close the window.

If Windows 7 just set - Adjust for best appearance &amp;amp; Apply.
If still not working, close &amp; start Lively again/restart windows.
(Does not work in some insider windows 10 builds)</value>
  </data>
  <data name="Startup.Description" xml:space="preserve">
    <value>Lively needs to run in the background for wallpaper playback</value>
  </data>
  <data name="Startup.Header" xml:space="preserve">
    <value>Start with Windows</value>
  </data>
  <data name="TextAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="TextAllFiles" xml:space="preserve">
    <value>All Files</value>
  </data>
  <data name="Application.Header" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="Attribution.Header" xml:space="preserve">
    <value>Attribution</value>
  </data>
  <data name="Author.Text" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="TextBack" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="TextBrowse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="Cancel.Content" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="TextChangeWallpaper" xml:space="preserve">
    <value>Change Wallpapers</value>
  </data>
  <data name="TextClose" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CloseWallpapers.Label" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="TextCompleted" xml:space="preserve">
    <value>Completed!</value>
  </data>
  <data name="ControlPanel.Subtitle" xml:space="preserve">
    <value>Click here to manage wallpapers</value>
  </data>
  <data name="TextConvertVideo" xml:space="preserve">
    <value>Convert to Video</value>
  </data>
  <data name="TextCreatePreview" xml:space="preserve">
    <value>Create Preview</value>
  </data>
  <data name="Customise.Text" xml:space="preserve">
    <value>Customise</value>
  </data>
  <data name="CustomiseWallpaper.Label" xml:space="preserve">
    <value>Customise</value>
  </data>
  <data name="DeleteWallpaper.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Description.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DisplayPauseRuleAllScreen.Content" xml:space="preserve">
    <value>All screen(s)</value>
  </data>
  <data name="DisplayPauseRulePerScreen.Content" xml:space="preserve">
    <value>Per screen</value>
  </data>
  <data name="TextDownload" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="EditWallpaper.Text" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="TextError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="TextExit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="ExportWallpaperZip.Text" xml:space="preserve">
    <value>Save to file</value>
  </data>
  <data name="TextFeatureMissing" xml:space="preserve">
    <value>Some features are not available in this version of Lively</value>
  </data>
  <data name="TextFileNotFound" xml:space="preserve">
    <value>File not found</value>
  </data>
  <data name="TextGIF" xml:space="preserve">
    <value>Animated GIF</value>
  </data>
  <data name="SourceCode.Description" xml:space="preserve">
    <value>Show some love by dropping a star</value>
  </data>
  <data name="TextGo" xml:space="preserve">
    <value>GO</value>
  </data>
  <data name="TextHelpTranslate.Title" xml:space="preserve">
    <value>Help translate</value>
  </data>
  <data name="TextHours" xml:space="preserve">
    <value>hour(s)</value>
  </data>
  <data name="TextInstall" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="TextKeyboard.Content" xml:space="preserve">
    <value>Keyboard</value>
  </data>
  <data name="TextLastChecked" xml:space="preserve">
    <value>Last checked</value>
  </data>
  <data name="TextLearnMore.Text" xml:space="preserve">
    <value>Learn more</value>
  </data>
  <data name="License.Header" xml:space="preserve">
    <value>License</value>
  </data>
  <data name="TextMinutes" xml:space="preserve">
    <value>minute(s)</value>
  </data>
  <data name="TextmoreInfo" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="TextMoreWallpapers" xml:space="preserve">
    <value>More Wallpapers</value>
  </data>
  <data name="TextMouse.Content" xml:space="preserve">
    <value>Mouse</value>
  </data>
  <data name="MouseInteractOnDesktop.Content" xml:space="preserve">
    <value>Mouse interaction when application focused</value>
  </data>
  <data name="TextNext" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="TextNo" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="TextOff.Content" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="TextOK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="TextOn.Content" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="TextOnline" xml:space="preserve">
    <value>Online</value>
  </data>
  <data name="TextOpenLively" xml:space="preserve">
    <value>Open Lively</value>
  </data>
  <data name="PauseAlgorithmTypeAllProcess.Content" xml:space="preserve">
    <value>All process</value>
  </data>
  <data name="PauseAlgorithmTypeExclusiveMode.Content" xml:space="preserve">
    <value>Direct3D</value>
  </data>
  <data name="PauseAlgorithmTypeForegroundProcess.Content" xml:space="preserve">
    <value>Foreground process</value>
  </data>
  <data name="TextPauseWallpapers" xml:space="preserve">
    <value>Pause Wallpapers</value>
  </data>
  <data name="TextPerformanceKill.Content" xml:space="preserve">
    <value>Kill</value>
  </data>
  <data name="TextPerformanceNone.Content" xml:space="preserve">
    <value>Nothing</value>
  </data>
  <data name="TextPerformancePause.Content" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="TextPicture" xml:space="preserve">
    <value>Picture</value>
  </data>
  <data name="PreviewWallpaper.Text" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="PrivacyPolicy.Header" xml:space="preserve">
    <value>Privacy Policy</value>
  </data>
  <data name="TextProcessingWallpaper" xml:space="preserve">
    <value>Processing</value>
  </data>
  <data name="TextRemove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="TextRule" xml:space="preserve">
    <value>Rule</value>
  </data>
  <data name="TextScreen" xml:space="preserve">
    <value>Screen</value>
  </data>
  <data name="SearchBox.PlaceholderText" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SetWallpaper.Text" xml:space="preserve">
    <value>Set as Wallpaper</value>
  </data>
  <data name="ShowOnDisk.Text" xml:space="preserve">
    <value>Open file location</value>
  </data>
  <data name="WallpaperSource.Text" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="TextStart" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="TextStop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="StoreReview.Content" xml:space="preserve">
    <value>Do you enjoy using Lively? Leave a review :)</value>
  </data>
  <data name="TextSupport.Content" xml:space="preserve">
    <value>Support</value>
  </data>
  <data name="TextSwitchBranchDev" xml:space="preserve">
    <value>Switch to beta (Dev channel)</value>
  </data>
  <data name="TextSwitchBranchOfficial" xml:space="preserve">
    <value>Switch to stable (Default channel)</value>
  </data>
  <data name="TextTags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="TaskbarThemeBlur.Content" xml:space="preserve">
    <value>Blur</value>
  </data>
  <data name="TaskbarThemeClear.Content" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="TaskbarThemeColor.Content" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="TaskbarThemeFluent.Content" xml:space="preserve">
    <value>Fluent</value>
  </data>
  <data name="TaskbarThemeWallpaper.Content" xml:space="preserve">
    <value>Wallpaper</value>
  </data>
  <data name="TaskbarThemeWallpaperFluent.Content" xml:space="preserve">
    <value>Wallpaper Fluent</value>
  </data>
  <data name="TextTileSizeLarge" xml:space="preserve">
    <value>Large</value>
  </data>
  <data name="TextTileSizeNormal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="TextTileSizeSmall" xml:space="preserve">
    <value>Small</value>
  </data>
  <data name="Title.Text" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="TextUIHeadless" xml:space="preserve">
    <value>Headless</value>
  </data>
  <data name="TextUILite" xml:space="preserve">
    <value>Lite</value>
  </data>
  <data name="TextUINormal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="TextUnsupportedFile" xml:space="preserve">
    <value>File format not supported</value>
  </data>
  <data name="TextUpdateAvailable" xml:space="preserve">
    <value>Update available!</value>
  </data>
  <data name="TextUpdateCheck" xml:space="preserve">
    <value>Check for update</value>
  </data>
  <data name="TextupdateCheckFail" xml:space="preserve">
    <value>Failed to check for software update</value>
  </data>
  <data name="TextUpdateChecking" xml:space="preserve">
    <value>Checking for update</value>
  </data>
  <data name="TextUpdateUptodate" xml:space="preserve">
    <value>Software is up-to-date!</value>
  </data>
  <data name="TextVideo" xml:space="preserve">
    <value>Video</value>
  </data>
  <data name="TextWallpaperCommandlineArgs" xml:space="preserve">
    <value>Enter optional commandline arguments</value>
  </data>
  <data name="WallpaperFitFill.Content" xml:space="preserve">
    <value>Fill</value>
  </data>
  <data name="WallpaperFitNone.Content" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="WallpaperFitUniform.Content" xml:space="preserve">
    <value>Uniform</value>
  </data>
  <data name="WallpaperFitUniformToFill.Content" xml:space="preserve">
    <value>Uniform Fill</value>
  </data>
  <data name="WallpaperLayoutDuplicate.Content" xml:space="preserve">
    <value>Duplicate same wallpaper</value>
  </data>
  <data name="WallpaperLayoutPerScreen.Content" xml:space="preserve">
    <value>Selected screen only</value>
  </data>
  <data name="WallpaperLayoutSpan.Content" xml:space="preserve">
    <value>Span across screens</value>
  </data>
  <data name="WallpaperType.Text" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Website.Header" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="TextWebStream" xml:space="preserve">
    <value>Web Stream</value>
  </data>
  <data name="TextWelcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="TextYes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="VideoPlayer.Header" xml:space="preserve">
    <value>Video player</value>
  </data>
  <data name="AddWallpaperFileBrowse.Description" xml:space="preserve">
    <value>Set all supported file types as wallpaper</value>
  </data>
  <data name="EnterUrl.Description" xml:space="preserve">
    <value>Set the web page of the URL you entered as wallpaper</value>
  </data>
  <data name="AppFocus.Description" xml:space="preserve">
    <value>Set what to do when any application is in focus</value>
  </data>
  <data name="AppFullScreen.Description" xml:space="preserve">
    <value>Set what to do when fullscreen games/applications are running</value>
  </data>
  <data name="AppRules.Description" xml:space="preserve">
    <value>Pause wallpaper when running these applications</value>
  </data>
  <data name="TipAppTheme" xml:space="preserve">
    <value>Lively adapts to system theme settings, to change appearance goto</value>
  </data>
  <data name="BatteryPower.Description" xml:space="preserve">
    <value>Change playback when AC power is disconnected</value>
  </data>
  <data name="BrowserDebuggingPort.Description" xml:space="preserve">
    <value>Enter the port for debugging webpage wallpapers; when ready navigate to http://localhost:portnumber to access developer console</value>
  </data>
  <data name="Debug.Description" xml:space="preserve">
    <value>Show developer menu</value>
  </data>
  <data name="DesktopPicture.Description" xml:space="preserve">
    <value>Set a picture of animated wallpaper as desktop wallpaper</value>
  </data>
  <data name="DisplayPauseRule.Description" xml:space="preserve">
    <value>Pause wallpaper on all screens or only the screen in which application is focused</value>
  </data>
  <data name="ExportLogs.Description" xml:space="preserve">
    <value>Create log report file</value>
  </data>
  <data name="GifPlayer.Description" xml:space="preserve">
    <value>Select the player used for gif wallpaper</value>
  </data>
  <data name="TipLivelySetupOnClose" xml:space="preserve">
    <value>Finish the setup to continue</value>
  </data>
  <data name="LockscreenPicture.Description" xml:space="preserve">
    <value>Set a picture of animated wallpaper as lockscreen wallpaper</value>
  </data>
  <data name="PauseAlgorithm.Description" xml:space="preserve">
    <value>Wallpaper pause algorithm</value>
  </data>
  <data name="PowerSavingModePower.Description" xml:space="preserve">
    <value>Change playback when Windows Power Saving Mode is enabled</value>
  </data>
  <data name="RemoteDesktopPower.Description" xml:space="preserve">
    <value>Change playback when running a Remote Desktop session</value>
  </data>
  <data name="TipScreensaver" xml:space="preserve">
    <value>After the inactivity period use the current wallpaper as your screensaver</value>
  </data>
  <data name="StreamWallpaperDetect.Description" xml:space="preserve">
    <value>If supported video stream link is detected use the video player instead of loading the webpage</value>
  </data>
  <data name="StreamWallpaperVideoQuality.Description" xml:space="preserve">
    <value>Select the desired video quality for online streams</value>
  </data>
  <data name="TipSwitchSoftwareBranch" xml:space="preserve">
    <value>Change software release from beta to stable or vice versa</value>
  </data>
  <data name="TaskbarTheme.Description" xml:space="preserve">
    <value>Change system taskbar appearance</value>
  </data>
  <data name="TipTileSize" xml:space="preserve">
    <value>Size of the wallpaper tiles in Library</value>
  </data>
  <data name="TipUIMode" xml:space="preserve">
    <value>For low-end systems select Lite mode</value>
  </data>
  <data name="VideoHardwareDecode.Description" xml:space="preserve">
    <value>Use hardware acceleration when possible</value>
  </data>
  <data name="VideoPlayer.Description" xml:space="preserve">
    <value>Select the player used for video wallpaper</value>
  </data>
  <data name="WallpaperDir.Description" xml:space="preserve">
    <value>Path used to store wallpaper files</value>
  </data>
  <data name="WallpaperFit.Description" xml:space="preserve">
    <value>Wallpaper scaling algorithm</value>
  </data>
  <data name="WallpaperInput.Description" xml:space="preserve">
    <value>Select ways to interact with wallpaper</value>
  </data>
  <data name="WallpaperLayout.Description" xml:space="preserve">
    <value>How wallpaper is applied to connected display devices</value>
  </data>
  <data name="TipWallpaperPlayback" xml:space="preserve">
    <value>Pause wallpaper playback when desktop is not focused</value>
  </data>
  <data name="WebBrowserDiskCache.Description" xml:space="preserve">
    <value>Store temporary files on disk instead of memory</value>
  </data>
  <data name="WebBrowser.Description" xml:space="preserve">
    <value>Select the player used for html wallpaper</value>
  </data>
  <data name="About.Label" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AddWallpaper.Label" xml:space="preserve">
    <value>Add Wallpaper</value>
  </data>
  <data name="AppFocus.Header" xml:space="preserve">
    <value>Applications focused</value>
  </data>
  <data name="AppFullScreen.Header" xml:space="preserve">
    <value>Applications fullscreen</value>
  </data>
  <data name="TitleAppName" xml:space="preserve">
    <value>Lively Wallpaper</value>
  </data>
  <data name="AppRules.Header" xml:space="preserve">
    <value>Application Rules</value>
  </data>
  <data name="AppTheme.Header" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="TitleAudioPlayOnScreen" xml:space="preserve">
    <value>Play audio on screen</value>
  </data>
  <data name="BatteryPower.Header" xml:space="preserve">
    <value>When on Battery Power</value>
  </data>
  <data name="TitleBrowseFile" xml:space="preserve">
    <value>Browse for video, gif, webpage... file to set as wallpaper</value>
  </data>
  <data name="BrowserDebuggingPort.Header" xml:space="preserve">
    <value>Debugging port</value>
  </data>
  <data name="TitleChangelog" xml:space="preserve">
    <value>Changelog</value>
  </data>
  <data name="Community.Header" xml:space="preserve">
    <value>Community</value>
  </data>
  <data name="Debug.Header" xml:space="preserve">
    <value>Debug</value>
  </data>
  <data name="TitleDeleteConfirmation" xml:space="preserve">
    <value>Confirm Deletion</value>
  </data>
  <data name="DesktopPicture.Header" xml:space="preserve">
    <value>Desktop picture</value>
  </data>
  <data name="DisplayPauseRule.Header" xml:space="preserve">
    <value>Display pause rule</value>
  </data>
  <data name="Documentation.Header" xml:space="preserve">
    <value>Documentation</value>
  </data>
  <data name="EnterUrl.Header" xml:space="preserve">
    <value>Enter URL</value>
  </data>
  <data name="ExportLogs.Header" xml:space="preserve">
    <value>Log File</value>
  </data>
  <data name="TitleGeneral" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="GifPlayer.Header" xml:space="preserve">
    <value>Gif player</value>
  </data>
  <data name="Help.Label" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="TitleInteraction" xml:space="preserve">
    <value>Interaction</value>
  </data>
  <data name="TitleLibrary" xml:space="preserve">
    <value>Library</value>
  </data>
  <data name="TitleLivelySetup" xml:space="preserve">
    <value>Lively Setup</value>
  </data>
  <data name="TitleLocation" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="LockscreenPicture.Header" xml:space="preserve">
    <value>Lockscreen picture</value>
  </data>
  <data name="TitleMisc" xml:space="preserve">
    <value>Misc</value>
  </data>
  <data name="TitleMute" xml:space="preserve">
    <value>Mute</value>
  </data>
  <data name="PauseAlgorithm.Header" xml:space="preserve">
    <value>Pause algorithm</value>
  </data>
  <data name="TitlePerformance" xml:space="preserve">
    <value>Performance</value>
  </data>
  <data name="TitlePlaylist" xml:space="preserve">
    <value>Playlist</value>
  </data>
  <data name="PleaseWait.Text" xml:space="preserve">
    <value>Please wait</value>
  </data>
  <data name="PowerSavingModePower.Header" xml:space="preserve">
    <value>When on Battery Saver</value>
  </data>
  <data name="RemoteDesktopPower.Header" xml:space="preserve">
    <value>When on Remote Desktop</value>
  </data>
  <data name="ReportBug.Header" xml:space="preserve">
    <value>Report Bug</value>
  </data>
  <data name="TitleScalingFit" xml:space="preserve">
    <value>Scaling/Fit</value>
  </data>
  <data name="ControlPanel.Title" xml:space="preserve">
    <value>Control Panel</value>
  </data>
  <data name="TitleScreensaver" xml:space="preserve">
    <value>Screensaver</value>
  </data>
  <data name="TitleScreensaverLockOnResume" xml:space="preserve">
    <value>On resume, display logon screen</value>
  </data>
  <data name="TitleSelectFile" xml:space="preserve">
    <value>Select File</value>
  </data>
  <data name="TitleSettings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="TitleSkipConfirm" xml:space="preserve">
    <value>Skip Confirmation</value>
  </data>
  <data name="SourceCode.Header" xml:space="preserve">
    <value>Source Code</value>
  </data>
  <data name="Store.Header" xml:space="preserve">
    <value>Store</value>
    <comment>For different version of Lively, example: Microsoft Store</comment>
  </data>
  <data name="StreamWallpaperVideoQuality.Header" xml:space="preserve">
    <value>Stream</value>
  </data>
  <data name="StreamWallpaperDetect.Header" xml:space="preserve">
    <value>Detect streams</value>
  </data>
  <data name="TitleStreamWallpaperVideoQuality" xml:space="preserve">
    <value>Video quality</value>
  </data>
  <data name="System.Header" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="TaskbarTheme.Header" xml:space="preserve">
    <value>Taskbar Theme</value>
  </data>
  <data name="TitleTileSize" xml:space="preserve">
    <value>Tile Size</value>
  </data>
  <data name="TitleUIMode" xml:space="preserve">
    <value>User Interface</value>
  </data>
  <data name="TitleUpdates" xml:space="preserve">
    <value>Updates</value>
  </data>
  <data name="TitleVideo" xml:space="preserve">
    <value>Video</value>
  </data>
  <data name="VideoHardwareDecode.Header" xml:space="preserve">
    <value>GPU decode</value>
  </data>
  <data name="TitleWallpaper" xml:space="preserve">
    <value>Wallpaper</value>
  </data>
  <data name="WallpaperDir.Header" xml:space="preserve">
    <value>Wallpaper Directory</value>
  </data>
  <data name="WallpaperDirMoveExisting.Content" xml:space="preserve">
    <value>Move existing wallpapers to new folder</value>
  </data>
  <data name="WallpaperFit.Header" xml:space="preserve">
    <value>Choose a fit</value>
  </data>
  <data name="WallpaperInput.Header" xml:space="preserve">
    <value>Wallpaper input</value>
  </data>
  <data name="WallpaperLayout.Header" xml:space="preserve">
    <value>Placement Method</value>
  </data>
  <data name="WallpaperPlaybackGroup.Header" xml:space="preserve">
    <value>Wallpaper playback</value>
  </data>
  <data name="TitleWarning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="WebBrowser.Header" xml:space="preserve">
    <value>Web browser</value>
  </data>
  <data name="WebBrowserDiskCache.Header" xml:space="preserve">
    <value>Disk cache</value>
  </data>
  <data name="TitleWebBrowserEngine" xml:space="preserve">
    <value>Engine</value>
  </data>
  <data name="TitleWebpageLoad" xml:space="preserve">
    <value>Load Webpage</value>
  </data>
  <data name="FastUI.Description" xml:space="preserve">
    <value>Keep User Interface running for faster startup</value>
  </data>
  <data name="FastUI.Header" xml:space="preserve">
    <value>Fast startup</value>
  </data>
  <data name="WallpaperDirGroup.Header" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="AppThemeDark.Content" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="AppThemeLight.Content" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="AppThemeSystem.Content" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="WindowsSettingsColor.Content" xml:space="preserve">
    <value>Windows color settings</value>
  </data>
  <data name="LaptopWallpaperPlaybackGroup.Header" xml:space="preserve">
    <value>Laptops</value>
  </data>
  <data name="DeveloperGroup.Header" xml:space="preserve">
    <value>Developer</value>
  </data>
  <data name="AppearanceBehaviour.Header" xml:space="preserve">
    <value>Appearance &amp; behavior</value>
  </data>
  <data name="ActiveWallpapers.Label" xml:space="preserve">
    <value>Active Wallpaper(s)</value>
  </data>
  <data name="TitleGallery" xml:space="preserve">
    <value>Gallery</value>
  </data>
  <data name="AboutMe.Text" xml:space="preserve">
    <value>Hi, I'm Dani John also known as rocksdanister. I developed Lively a Free and open-source (FOSS) wallpaper application. Thanks for taking the time to look at my work.</value>
  </data>
  <data name="LicenseLink.Content" xml:space="preserve">
    <value>Software license</value>
  </data>
  <data name="AttributionLink.Content" xml:space="preserve">
    <value>Third party software notice</value>
  </data>
  <data name="PrivacyPolicyLink.Content" xml:space="preserve">
    <value>Data collection policy</value>
  </data>
  <data name="AddWallpaperDrop.Text" xml:space="preserve">
    <value>Add wallpaper</value>
  </data>
  <data name="ComingSoon.Text" xml:space="preserve">
    <value>Coming soon</value>
  </data>
  <data name="AboutMenu.Text" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="SourceWebsite.Text" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="TextOpen.Content" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="TextSave.Content" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="UIMode.Description" xml:space="preserve">
    <value>User interface effects and animations</value>
  </data>
  <data name="UIMode.Header" xml:space="preserve">
    <value>User interface</value>
  </data>
  <data name="UIModeLite.Content" xml:space="preserve">
    <value>Lite</value>
  </data>
  <data name="UIModeNormal.Content" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="Screensaver.Description" xml:space="preserve">
    <value>How screensaver is applied to connected to display devices</value>
  </data>
  <data name="Screensaver.Header" xml:space="preserve">
    <value>Type of screensaver</value>
  </data>
  <data name="ScreensaverModeDifferentWallpaper.Content" xml:space="preserve">
    <value>Configured separately</value>
  </data>
  <data name="ScreensaverModeSameWallpaper.Content" xml:space="preserve">
    <value>Same as running wallpaper</value>
  </data>
  <data name="ScreensaverPlugin.Title" xml:space="preserve">
    <value>Plugin required</value>
  </data>
  <data name="ScreensaverPluginMessage.Text" xml:space="preserve">
    <value>One time setup is required to run screensaver</value>
  </data>
  <data name="WallpaperLayoutScreenPicker.Content" xml:space="preserve">
    <value>Always pick screen when choosing wallpaper</value>
  </data>
  <data name="GalleryAccount.Text" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="GalleryAccountDelete.Content" xml:space="preserve">
    <value>Delete account</value>
  </data>
  <data name="GalleryAccountExport.Content" xml:space="preserve">
    <value>Export data</value>
  </data>
  <data name="GalleryAccountLogin.Content" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="GalleryAccountLogout.Content" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="GalleryPageCollection.Content" xml:space="preserve">
    <value>Collection</value>
  </data>
  <data name="GalleryPageHome.Content" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="GalleryPageManage.Content" xml:space="preserve">
    <value>Manage</value>
  </data>
  <data name="GalleryPageProfile.Content" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="GalleryPleaseLogin.Text" xml:space="preserve">
    <value>Please log in to continue</value>
  </data>
  <data name="GalleryWelcomeMessage.Text" xml:space="preserve">
    <value>Hi</value>
  </data>
  <data name="RestoreWallpaper.Text" xml:space="preserve">
    <value>We found these wallpapers in your account</value>
  </data>
  <data name="TextDownloadNow.Content" xml:space="preserve">
    <value>Download now</value>
  </data>
  <data name="TextMaybeLater.Content" xml:space="preserve">
    <value>Maybe later</value>
  </data>
  <data name="TextSelectAll.Content" xml:space="preserve">
    <value>Select all</value>
  </data>
  <data name="TextSelectNone.Content" xml:space="preserve">
    <value>Select none</value>
  </data>
  <data name="TitleWelcomeback.Text" xml:space="preserve">
    <value>Welcome back!</value>
  </data>
  <data name="ReportWallpaper.Header" xml:space="preserve">
    <value>Reasons</value>
  </data>
  <data name="ReportWallpaperCopyright.Content" xml:space="preserve">
    <value>Copyright violation</value>
  </data>
  <data name="ReportWallpaperMisleading.Content" xml:space="preserve">
    <value>Misleading information</value>
  </data>
  <data name="ReportWallpaperOther.Content" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="ReportWallpaperSpam.Content" xml:space="preserve">
    <value>Spam</value>
  </data>
  <data name="ReportWallpaperViolence.Content" xml:space="preserve">
    <value>Nudity or violence</value>
  </data>
  <data name="TextAdditionalNotes.Text" xml:space="preserve">
    <value>Additional notes</value>
  </data>
  <data name="TextReportWallpaper.Text" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="TitleReportWallpaper.Text" xml:space="preserve">
    <value>Report Wallpaper</value>
  </data>
  <data name="Send.Content" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="GalleryAccountDeleteConfirm.Text" xml:space="preserve">
    <value>Please confirm this action as it CAN NOT be undone</value>
  </data>
  <data name="GalleryAccountDeleteFail.Text" xml:space="preserve">
    <value>Failed to delete account, please try again later</value>
  </data>
  <data name="TextConfirmCancel.Text" xml:space="preserve">
    <value>Do you want to cancel it?</value>
  </data>
  <data name="TextWait.Text" xml:space="preserve">
    <value>Wait</value>
  </data>
  <data name="TitleDownloadProgress.Text" xml:space="preserve">
    <value>Download in Progress</value>
  </data>
  <data name="TextContributors.Text" xml:space="preserve">
    <value>Contributors</value>
  </data>
  <data name="TextShare.Text" xml:space="preserve">
    <value>Share</value>
  </data>
  <data name="TitleShareWallpaper.Text" xml:space="preserve">
    <value>Share Wallpaper</value>
  </data>
  <data name="ExportWallpaperGallery.Text" xml:space="preserve">
    <value>Gallery upload</value>
  </data>
  <data name="ExportWallpaperLink.Text" xml:space="preserve">
    <value>Copy link</value>
  </data>
  <data name="TextCustomiseWallpaper" xml:space="preserve">
    <value>Customise Wallpaper</value>
  </data>
  <data name="TextCloseWallpapers" xml:space="preserve">
    <value>Close Wallpapers</value>
  </data>
  <data name="TitleChooseApplication.Text" xml:space="preserve">
    <value>Choose Application</value>
  </data>
  <data name="WallpaperInstallSize.Text" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="PluginNotFound.Message" xml:space="preserve">
    <value>Please install the required plugin</value>
  </data>
  <data name="PluginNotFound.Title" xml:space="preserve">
    <value>Plugin not found</value>
  </data>
  <data name="UpdateCompleted.Text" xml:space="preserve">
    <value>Update complete</value>
  </data>
  <data name="UpdateWhatsNew.Text" xml:space="preserve">
    <value>Check out what's new</value>
  </data>
  <data name="AppThemeColor.Header" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="DescriptionDefault.Text" xml:space="preserve">
    <value>Use system default</value>
  </data>
  <data name="DescriptionDynamicTheme.Text" xml:space="preserve">
    <value>Adapt to wallpaper</value>
  </data>
  <data name="TextDefault.Text" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="TextDynamicTheme.Text" xml:space="preserve">
    <value>Dynamic</value>
  </data>
  <data name="Theme.Label" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="IconsHidden.Message" xml:space="preserve">
    <value>To prevent accidental selection desktop icons are currently hidden</value>
  </data>
  <data name="IconsHidden.Title" xml:space="preserve">
    <value>Desktop icons</value>
  </data>
  <data name="TextEndOfItems.Text" xml:space="preserve">
    <value>That's all for now..</value>
  </data>
  <data name="DevelopmentOnHold.Message" xml:space="preserve">
    <value>This feature development is on hold</value>
  </data>
  <data name="WallpaperPluginGroup.Header" xml:space="preserve">
    <value>Plugins</value>
  </data>
  <data name="AddWallpaperAdvanced.Description" xml:space="preserve">
    <value>Create a dynamic wallpaper</value>
  </data>
  <data name="AddWallpaperAdvanced.Header" xml:space="preserve">
    <value>Advanced</value>
  </data>
  <data name="DescriptionDepthApprox.Content" xml:space="preserve">
    <value>Approximating depth..</value>
  </data>
  <data name="DescriptionDepthWallpaperItem.Content" xml:space="preserve">
    <value>Using AI transform photographs into 3D</value>
  </data>
  <data name="TextContinue.Content" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="TitleCreateWallpaperOpenItem.Description" xml:space="preserve">
    <value>Create a simple wallpaper</value>
  </data>
  <data name="TitleDepthWallpaper.Content" xml:space="preserve">
    <value>AI Depth Wallpaper</value>
  </data>
  <data name="TitleDepthWallpaperItem.Content" xml:space="preserve">
    <value>Depth Wallpaper</value>
  </data>
  <data name="DescriptionDepthWallpaperTemplate.Content" xml:space="preserve">
    <value>AI generated depth wallpaper</value>
  </data>
  <data name="TitleCreateWallpaper.Content" xml:space="preserve">
    <value>Create Wallpaper</value>
  </data>
  <data name="RunningAsAdminWarning.Message" xml:space="preserve">
    <value>Some functionalities may not be available when run as administrator</value>
  </data>
  <data name="DescriptionDownloadRequired.Text" xml:space="preserve">
    <value>Additional files need to be downloaded for this feature</value>
  </data>
  <data name="TitleDownloadRequired.Text" xml:space="preserve">
    <value>Download Required</value>
  </data>
  <data name="TitleDownload.Content" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="TextReloadWallpaper" xml:space="preserve">
    <value>Reload Wallpapers</value>
  </data>
</root>